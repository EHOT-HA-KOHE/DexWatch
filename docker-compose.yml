version: '3.8'

services:
  # django-app:
  #   build:
  #     context: ./django-app
  #   depends_on:
  #     - redis
  #     - postgres
  #     - api-proxy
  #   environment:
  #     - DJANGO_SETTINGS_MODULE=myproject.settings
  #     - REDIS_URL=redis://redis:6379/0
  #     - DATABASE_URL=postgres://user:password@postgres/dbname

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  blockchain-listener:
    build:
      context: ./submodules/blockchain-listener
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER_URL: kafka:9092
    volumes:
      - ./submodules/blockchain-listener:/app
    command: python main.py

  # redis:
  #   image: redis:latest

  # postgres:
  #   image: postgres:latest
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: dbname
